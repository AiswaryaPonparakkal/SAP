call event

*&---------------------------------------------------------------------*
*& Report ZAISH_PURCHASE_ALV
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT zaish_purchase_alv.
DATA : it_vbak     TYPE zneethu_vbak,
       wa_vbak     LIKE LINE OF it_vbak,
       it_kna1     TYPE zneethu_kna1,
       wa_kna1     LIKE LINE OF it_kna1,
       it_header   TYPE zaish_header_table,
       wa_header   LIKE LINE OF it_header,
       it_fieldcat TYPE slis_t_fieldcat_alv,
       it_vbap     TYPE zneethu_vbap,
       wa_vbap     LIKE LINE OF it_vbap,
       it_t006a    TYPE zneethu_t006a,
       wa_t006a    LIKE LINE OF it_t006a,
       it_item     TYPE  zaish_item_table,
       wa_item     LIKE LINE OF it_item,
       it_fcat     TYPE slis_t_fieldcat_alv,
       lw_fcat     LIKE LINE OF it_fcat,
       is_layout   TYPE slis_layout_alv.
*
*DATA : it_header TYPE zaish_header_table,
*       wa_header LIKE LINE OF it_header,
*       it_item   TYPE zaish_item_table,
*       wa_item   LIKE LINE OF it_item,
*       it_fcat   TYPE slis_t_fieldcat_alv,
*       lw_fcat   LIKE LINE OF it_fcat,
*       is_layout TYPE slis_layout_alv.

SELECT-OPTIONS st_vbeln FOR wa_header-vbeln.
PARAMETERS:p_fm_alv RADIOBUTTON GROUP rv1,
           p_oo_alv RADIOBUTTON GROUP rv1.
PERFORM colour.
CALL FUNCTION 'ZAISH_PURCHASE_HEADER'
  EXPORTING
    im_s_num  = st_vbeln[]
  IMPORTING
    ex_header = it_header.

IF p_fm_alv IS NOT INITIAL.
  PERFORM display_header.
ELSE.
  PERFORM display_oo_alv.
ENDIF.



*&---------------------------------------------------------------------*
*& Form display_header
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM display_header .



  lw_fcat-col_pos = 1.
  lw_fcat-fieldname = 'vbeln'.
  lw_fcat-tabname = 'it_header'.
  lw_fcat-seltext_m = 'Document Number'.
  lw_fcat-outputlen = 20.
  APPEND lw_fcat TO it_fcat.

  lw_fcat-col_pos = 2.
  lw_fcat-fieldname = 'audat'.
  lw_fcat-tabname = 'it_header'.
  lw_fcat-seltext_m = 'Document Date'.
  lw_fcat-outputlen = 20.
  APPEND lw_fcat TO it_fcat.

  lw_fcat-col_pos = 3.
  lw_fcat-fieldname = 'netwr'.
  lw_fcat-tabname = 'it_header'.
  lw_fcat-seltext_m = 'Net Value'.
  lw_fcat-outputlen = 20.
  APPEND lw_fcat TO it_fcat.

  lw_fcat-col_pos = 4.
  lw_fcat-fieldname = 'name1'.
  lw_fcat-tabname = 'it_header'.
  lw_fcat-seltext_m = 'Sold To Party'.
  lw_fcat-outputlen = 20.
  APPEND lw_fcat TO it_fcat.

  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
    EXPORTING
*     I_INTERFACE_CHECK       = ' '
*     I_BYPASSING_BUFFER      = ' '
*     I_BUFFER_ACTIVE         = ' '
      i_callback_program      = 'ZAISH_PURCHASE_ALV'
*     I_CALLBACK_PF_STATUS_SET          = ' '
      i_callback_user_command = 'USER_COMMAND'
*     I_CALLBACK_TOP_OF_PAGE  = ' '
*     I_CALLBACK_HTML_TOP_OF_PAGE       = ' '
*     I_CALLBACK_HTML_END_OF_LIST       = ' '
*     I_STRUCTURE_NAME        =
*     I_BACKGROUND_ID         = ' '
*     I_GRID_TITLE            =
*     I_GRID_SETTINGS         =
      is_layout               = is_layout
      it_fieldcat             = it_fcat
*     IT_EXCLUDING            =
*     IT_SPECIAL_GROUPS       =
*     IT_SORT                 =
*     IT_FILTER               =
*     IS_SEL_HIDE             =
*     I_DEFAULT               = 'X'
*     I_SAVE                  = ' '
*     IS_VARIANT              =
*     IT_EVENTS               =
*     IT_EVENT_EXIT           =
*     IS_PRINT                =
*     IS_REPREP_ID            =
*     I_SCREEN_START_COLUMN   = 0
*     I_SCREEN_START_LINE     = 0
*     I_SCREEN_END_COLUMN     = 0
*     I_SCREEN_END_LINE       = 0
*     I_HTML_HEIGHT_TOP       = 0
*     I_HTML_HEIGHT_END       = 0
*     IT_ALV_GRAPHICS         =
*     IT_HYPERLINK            =
*     IT_ADD_FIELDCAT         =
*     IT_EXCEPT_QINFO         =
*     IR_SALV_FULLSCREEN_ADAPTER        =
*     O_PREVIOUS_SRAL_HANDLER =
* IMPORTING
*     E_EXIT_CAUSED_BY_CALLER =
*     ES_EXIT_CAUSED_BY_USER  =
    TABLES
      t_outtab                = it_header
    EXCEPTIONS
      program_error           = 1
      OTHERS                  = 2.
  IF sy-subrc <> 0.
* Implement suitable error handling here
  ENDIF.

ENDFORM.

FORM user_command  USING r_ucomm LIKE sy-ucomm
                                   rs_selfield TYPE slis_selfield.
  IF r_ucomm EQ '&IC1' AND rs_selfield-fieldname EQ 'vbeln'.
    CLEAR it_item.
    DATA : v_vbeln  TYPE vbap-vbeln.

    v_vbeln = rs_selfield-value.

    CALL FUNCTION 'ZAISH_PURCHASE_ITEM'
      EXPORTING
        im_v_vbeln = v_vbeln
      IMPORTING
        ex_item    = it_item.

*    PERFORM itemdetails IN PROGRAM zaish_purchase_list USING v_vbeln  CHANGING it_item.

    CLEAR IT_fcat.


    lw_fcat-col_pos = 1.
    lw_fcat-fieldname = 'posnr'.
    lw_fcat-tabname = 'it_item'.
    lw_fcat-seltext_m = 'item name'.
    lw_fcat-outputlen = 20.
    APPEND lw_fcat TO it_fcat.

    lw_fcat-col_pos = 2.
    lw_fcat-fieldname =  'pstyv'.
    lw_fcat-tabname = 'it_item'.
    lw_fcat-seltext_m = 'material'.
    lw_fcat-outputlen = 20.
    APPEND lw_fcat TO it_fcat.

    lw_fcat-col_pos = 3.
    lw_fcat-fieldname = 'arktx'.
    lw_fcat-tabname = 'it_item'.
    lw_fcat-seltext_m = 'Item description'.
    lw_fcat-outputlen = 20.
    APPEND lw_fcat TO it_fcat.

    lw_fcat-col_pos = 4.
    lw_fcat-fieldname = 'kwmeng'.
    lw_fcat-tabname = 'it_item'.
    lw_fcat-seltext_m = 'order qty'.
    lw_fcat-outputlen = 20.
    APPEND lw_fcat TO it_fcat.

    lw_fcat-col_pos = 5.
    lw_fcat-fieldname = 'msehi'.
    lw_fcat-tabname = 'it_item'.
    lw_fcat-seltext_m = 'Uom'.
    lw_fcat-outputlen = 20.
    APPEND lw_fcat TO it_fcat.

    lw_fcat-col_pos = 6.
    lw_fcat-fieldname = 'netwr'.
    lw_fcat-tabname = 'it_item'.
    lw_fcat-seltext_m = 'Net value'.
    lw_fcat-outputlen = 20.
    APPEND lw_fcat TO it_fcat.

    CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
      EXPORTING
*       I_INTERFACE_CHECK       = ' '
*       I_BYPASSING_BUFFER      = ' '
*       I_BUFFER_ACTIVE         = ' '
        i_callback_program      = 'ZAISH_PURCHASE_ALV'
*       I_CALLBACK_PF_STATUS_SET          = ' '
        i_callback_user_command = 'USER_COMMAND'
*       I_CALLBACK_TOP_OF_PAGE  = ' '
*       I_CALLBACK_HTML_TOP_OF_PAGE       = ' '
*       I_CALLBACK_HTML_END_OF_LIST       = ' '
*       I_STRUCTURE_NAME        =
*       I_BACKGROUND_ID         = ' '
*       I_GRID_TITLE            =
*       I_GRID_SETTINGS         =
        is_layout               = is_layout
        it_fieldcat             = it_fcat
*       IT_EXCLUDING            =
*       IT_SPECIAL_GROUPS       =
*       IT_SORT                 =
*       IT_FILTER               =
*       IS_SEL_HIDE             =
*       I_DEFAULT               = 'X'
*       I_SAVE                  = ' '
*       IS_VARIANT              =
*       IT_EVENTS               =
*       IT_EVENT_EXIT           =
*       IS_PRINT                =
*       IS_REPREP_ID            =
*       I_SCREEN_START_COLUMN   = 0
*       I_SCREEN_START_LINE     = 0
*       I_SCREEN_END_COLUMN     = 0
*       I_SCREEN_END_LINE       = 0
*       I_HTML_HEIGHT_TOP       = 0
*       I_HTML_HEIGHT_END       = 0
*       IT_ALV_GRAPHICS         =
*       IT_HYPERLINK            =
*       IT_ADD_FIELDCAT         =
*       IT_EXCEPT_QINFO         =
*       IR_SALV_FULLSCREEN_ADAPTER        =
*       O_PREVIOUS_SRAL_HANDLER =
*   IMPORTING
*       E_EXIT_CAUSED_BY_CALLER =
*       ES_EXIT_CAUSED_BY_USER  =
      TABLES
        t_outtab                = it_item
      EXCEPTIONS
        program_error           = 1
        OTHERS                  = 2.
    IF sy-subrc <> 0.
* Implement suitable error handling here
    ENDIF.

  ENDIF.

  IF r_ucomm EQ '&IC1' AND rs_selfield-fieldname EQ 'name1'.
*  DATA V_KUNNR TYPE KNA1-KUNNR.
    READ TABLE it_header INTO wa_header WITH KEY name1 = rs_selfield-value.
    SET PARAMETER ID 'KUN' FIELD wa_header-kunnr.
    CALL TRANSACTION 'XD03' AND SKIP FIRST SCREEN.
  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form colour
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM colour .
  is_layout-zebra = 'X'.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form display_oo_alv
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*



CLASS cl DEFINITION.
  
  PUBLIC SECTION.
    METHODS enable_doubleclick FOR EVENT double_click OF cl_salv_events_table IMPORTING row column.
ENDCLASS.

CLASS cl IMPLEMENTATION.
  
  METHOD enable_doubleclick.
    CLEAR it_item.
    READ TABLE it_header INTO wa_header INDEX row.
    CLEAR it_item.
    
    CALL FUNCTION 'ZAISH_PURCHASE_ITEM'
      EXPORTING
        im_v_vbeln = wa_header-vbeln
      IMPORTING
        ex_item    = it_item.
    
    cl_salv_table=>factory(
*          EXPORTING
*            list_display   = if_salv_c_bool_sap=>false " ALV Displayed in List Mode
*            r_container    =                           " Abstract Container for GUI Controls
*            container_name =
      IMPORTING
        r_salv_table   =    DATA(o_alv2)                       " Basis Class Simple ALV Tables
      CHANGING
        t_table        = it_item
    ).
*        CATCH cx_salv_msg. " ALV: General Error Class with Message
    o_alv2->display( ).
    
  ENDMETHOD.
  
ENDCLASS.

FORM display_oo_alv .


  DATA o_event TYPE REF TO cl.
  CREATE OBJECT o_event.
  cl_salv_table=>factory(
*    EXPORTING
*      list_display   = if_salv_c_bool_sap=>false " ALV Displayed in List Mode
*      r_container    =                           " Abstract Container for GUI Controls
*      container_name =
    IMPORTING
      r_salv_table   =     DATA(o_alv1)                      " Basis Class Simple ALV Tables
    CHANGING
      t_table        = it_header
  ).
  DATA(o_event_class) = o_alv1->get_event( ).
  SET HANDLER o_event->enable_doubleclick FOR o_event_class.

*  CATCH cx_salv_msg. " ALV: General Error Class with Message
  o_alv1->display( ).

ENDFORM.
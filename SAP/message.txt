MESSAGE
----------------

REPORT ZAISH_MESSAGE.
DATA : it_makt TYPE TABLE of makt,
      wa_makt LIKE LINE OF it_makt.

PARAMETERS p_matnr TYPE makt-matnr.

select * from makt INTO TABLE it_makt WHERE matnr eq p_matnr.

IF sy-subrc is NOT INITIAL.
 MESSAGE 'please enter valid input' type 'E'.

ENDIF.
  LOOP AT it_makt INTO wa_makt.
   WRITE : / wa_makt-matnr,wa_makt-spras,wa_makt-maktx.
  ENDLOOP.
----------------------------------------------------------
->   given input - error message will occur in output page
-> MESSAGE 'please enter valid input' type 'E'.
instead use
 MESSAGE text-001 type 'E'.
 - goto -> text element -> type-> save-> activate
-----------------------------------------------------------

REPORT ZAISH_MESSAGE.
DATA : it_makt TYPE TABLE of makt,
      wa_makt LIKE LINE OF it_makt.

PARAMETERS p_matnr TYPE makt-matnr.

select * from makt INTO TABLE it_makt WHERE matnr eq p_matnr.

IF sy-subrc is NOT INITIAL.
 MESSAGE e000(ZAISH_MSG).
ENDIF.
  LOOP AT it_makt INTO wa_makt.
   WRITE : / wa_makt-matnr,wa_makt-spras,wa_makt-maktx.
  ENDLOOP.
       

                         OR


REPORT ZAISH_MESSAGE MESSAGE-ID ZAISH_MSG.
DATA : it_makt TYPE TABLE of makt,
      wa_makt LIKE LINE OF it_makt.

PARAMETERS p_matnr TYPE makt-matnr.

select * from makt INTO TABLE it_makt WHERE matnr eq p_matnr.

IF sy-subrc is NOT INITIAL.
 MESSAGE e000.
ENDIF.
  LOOP AT it_makt INTO wa_makt.
   WRITE : / wa_makt-matnr,wa_makt-spras,wa_makt-maktx.
  ENDLOOP.
-----------------------------------------------------
->  creat message class [SE91 ->  click Messages -> enter data.
-----------------------------------------------------


REPORT ZAISH_MESSAGE MESSAGE-ID ZAISH_MSG.
DATA : it_makt TYPE TABLE of makt,
      wa_makt LIKE LINE OF it_makt.

PARAMETERS p_matnr TYPE makt-matnr.

AT SELECTION-SCREEN.
select * from makt INTO TABLE it_makt WHERE matnr eq p_matnr.

IF sy-subrc is NOT INITIAL.
 MESSAGE e000.
ENDIF.
START-OF-SELECTION.
  LOOP AT it_makt INTO wa_makt.
   WRITE : / wa_makt-matnr,wa_makt-spras,wa_makt-maktx.
  ENDLOOP.
----------------------------------------------------
-> ERROR message and input field will be visible.
----------------------------------------------------

REPORT ZAISH_MESSAGE MESSAGE-ID ZAISH_MSG.
DATA : it_makt TYPE TABLE of makt,
      wa_makt LIKE LINE OF it_makt,
      p_message TYPE c LENGTH 20.

PARAMETERS p_matnr TYPE makt-matnr.

AT SELECTION-SCREEN.
select * from makt INTO TABLE it_makt WHERE matnr eq p_matnr.

IF sy-subrc is NOT INITIAL.
CONCATENATE p_matnr ' is invalid' INTO p_message SEPARATED BY space.
  MESSAGE p_message TYPE 'E'.
ENDIF.
START-OF-SELECTI
  LOOP AT it_makt INTO wa_makt.
   WRITE : / wa_makt-matnr,wa_makt-spras,wa_makt-maktx.
  ENDLOOP.

               OR
message class -> long text
---------------------------
&CAUSE&
&V1&  Wrong input entered.
&SYSTEM_RESPONSE&
&v1& Unable to show output.
&WHAT_TO_DO&
Enter to valid output.
&SYS_ADMIN&
Error.

REPORT ZAISH_MESSAGE MESSAGE-ID ZAISH_MSG.
DATA : it_makt TYPE TABLE of makt,
      wa_makt LIKE LINE OF it_makt,
      p_message TYPE c LENGTH 20.

PARAMETERS p_matnr TYPE makt-matnr.

AT SELECTION-SCREEN.
select * from makt INTO TABLE it_makt WHERE matnr eq p_matnr.

IF sy-subrc is NOT INITIAL.
  MESSAGE e000 WITH p_matnr.
ENDIF.
START-OF-SELECTION.
  LOOP AT it_makt INTO wa_makt.
   WRITE : / wa_makt-matnr,wa_makt-spras,wa_makt-maktx.
  ENDLOOP.
----------------------------------------------------------------------------------
discription about error 
and
field name is also shown

long text
----------------------------------------------------------------------------------